services:

  tickets-postgres:
    image: postgres:17.2-alpine3.21
    ports:
      - 6432:5432
    environment:
      environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: "trust"

  tickets-adminer:
    image: adminer:4.8.1
    ports:
      - 8081:8080
    depends_on:
      - tickets-postgres

  tickets-backend:
    working_dir: /go-app-dir
    environment:
      - GO_HOST=${GO_HOST}
      - GO_DB_URL=${GO_DB_URL}
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/go-app-dir
    ports:
      - "8080:8080"
    depends_on:
      - tickets-postgres

# prod
  # vue-frontend:
  #   build:
  #     context: ./rzd-frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8082:80"
  #   depends_on:
  #     - tickets-backend

# dev
  vue-frontend:
    image: node:22.14-alpine3.21 # Используем официальный образ Node.js
    working_dir: /app # Рабочая директория в контейнере
    volumes:
      - ./rzd-frontend:/app # Монтируем папку с проектом
    ports:
      - "5173:5173" # Пробрасываем порт для разработки (обычно 8080 для yarn dev)
    # environment:
    #   - CHOKIDAR_USEPOLLING=true # Для отслеживания изменений в файлах
    command: sh -c "yarn install && yarn dev" # Устанавливаем зависимости и запускаем dev-сервер
    depends_on:
      - tickets-backend